name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash -l {0}

jobs:
  run:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup conda
        uses: mamba-org/setup-micromamba@main
        with:
          environment-file: dev-environment.yml

      - name: Python linters
        run: flake8 bqscales --ignore=E501,W504,W503

      - name: jlpm install
        run: jlpm install

      - name: JS Linters
        run: |
          jlpm run prettier:check
          jlpm run eslint:check

      - name: Install bqscales
        run: pip install .

      - name: Check installation files
        run: |
          test -d $CONDA_PREFIX/share/jupyter/nbextensions/bqscales
          test -f $CONDA_PREFIX/share/jupyter/nbextensions/bqscales/extension.js
          test -f $CONDA_PREFIX/share/jupyter/nbextensions/bqscales/index.js
          test -d $CONDA_PREFIX/share/jupyter/labextensions/bqscales
          test -f $CONDA_PREFIX/share/jupyter/labextensions/bqscales/package.json

      - name: Print nbextension and labextension
        run: |
          jupyter nbextension list
          jupyter labextension list

      - name: Check nbextension and labextension
        run: |
          jupyter nbextension list 2>&1 | grep -ie "bqscales/extension.*enabled" -
          jupyter labextension list 2>&1 | grep -ie "bqscales.*enabled.*ok" -

      - name: Build Python package
        run: python -m build

      - name: Upload builds
        uses: actions/upload-artifact@v3
        with:
          name: dist ${{ github.run_number }}
          path: ./dist

  visual-regression-tests:
    runs-on: ubuntu-latest
    needs: [run]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: bqplot/bqplot

      - name: Setup conda
        uses: mamba-org/setup-micromamba@main
        with:
          environment-file: test-environment.yml

      - uses: actions/download-artifact@v3
        with:
          name: dist ${{ github.run_number }}
          path: ./dist

      - name: Install the package
        run: pip install -vv bqscales*.whl
        working-directory: dist

      - name: Install the package
        run: pip install . -vvv

      - name: Install dependencies
        shell: bash -l {0}
        working-directory: ui-tests
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        run: jlpm install

      - name: Set up browser cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/pw-browsers
          key: ${{ runner.os }}-${{ hashFiles('ui-tests/yarn.lock') }}

      - name: Install browser
        shell: bash -l {0}
        run: npx playwright install chromium
        working-directory: ui-tests

      - name: Execute integration tests
        shell: bash -l {0}
        working-directory: ui-tests
        run: npx playwright test

      - name: Upload Playwright Test report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: bqplot-playwright-tests
          path: |
            ui-tests/test-results
            ui-tests/playwright-report
